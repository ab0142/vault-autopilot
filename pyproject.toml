[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vault-autopilot"
description = "Effortlessly manage your secrets and other Vault resources with the power of automation."
readme = "README.md"
requires-python = ">=3.11"
license-files = { paths = ["LICENSE"] }
authors = [
  { name = "hqdncw", email = "hqdncw@gmail.com" },
]
keywords = [
  "hashicorp vault",
]
# https://pypi.org/classifiers/
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Framework :: AsyncIO",
  "Framework :: Hatch",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = [
  "pydantic~=2.4.2",
  "aiohttp~=3.8.5",
  "lazy-object-proxy~=1.9.0",
  "networkx~=3.2.1",
  "ironfence~=0.1.0",
  # TODO: temporary dependencies
  "jinja2~=3.1.3",
]
version = "0.1.0"

[project.urls]
Repository = "https://github.com/hqdncw/vault-autopilot"

[project.optional-dependencies]
cli = [
  "click~=8.1.7",
  "ruamel.yaml~=0.18.5"
]
# colorlog = [
#   "colorlog~=6.8.0"
# ]
dev = [
  "black~=23.12.1",
  "isort~=5.13.2",
  "ruff~=0.1.14",
  "mypy~=1.8.0",
  "pre-commit~=3.4.0"
]

[tool.black]
line-length = 88
target-version = ["py311"]
exclude = '''
(
    \.git
  | dist
  | venv
  | docs
)
'''

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.isort]
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#isort
profile = "black"

[tool.mypy]
python_version = "3.11"
show_error_codes = true
show_error_context = true
pretty = true
ignore_missing_imports = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
follow_imports_for_stubs = true
namespace_packages = true
show_absolute_path = true
enable_incomplete_feature = ["Unpack"]
plugins = [
  "pydantic.mypy"
]

[[tool.mypy.overrides]]
module = [
  "lazy_object_proxy.*",
  "networkx.*",
  "ruamel"
]
ignore_missing_imports = true

[tool.semantic_release]
build_command = """
  python -m pip install --upgrade build
  python -m build .
"""
version_variables = ["./src/vault_autopilot/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
commit_message = "bump: {version}\n\nAutomatically generated by python-semantic-release"
major_on_zero = false

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
